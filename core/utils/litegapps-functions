# Copyright 2020 - 2022 The Litegapps Project
# Litegapps Functions
# By wahyu6070
#
print(){ ui_print "$1"; }
del (){ rm -rf "$@"; }
cdir (){ mkdir -p "$@"; }
printlog(){
	print "$1"
	if [ "$1" != " " ]; then
	echo "$1 [$(date '+%d/%m/%Y %H:%M:%S')]" >> $log
	echo "$1 [$(date '+%d/%m/%Y %H:%M:%S')]" >> $loglive
	else
	print "$1" >> $log
	echo "$1" >> $loglive
	fi
	}
sedlog(){
	echo "[Processing]  $1 [$(date '+%d/%m/%Y %H:%M:%S')]" >> $log
	echo "[Processing]  $1 [$(date '+%d/%m/%Y %H:%M:%S')]" >> $loglive
	}
	
while_log(){
	echo "$1" | tee -a $log
	}
listlog(){
	echo " " >> $log
	echo "---------- Folder List : $1 ----------" >> $log
	echo " " >> $loglive
	echo "---------- Folder List : $1 ----------" >> $loglive
	find "$1" -type f | while read lol; do
	while_log "| $(du -sah $lol | cut -f 1) | $lol"
	done >> $loglive
	echo "--------------------------------------" >> $log
	echo " " >> $log
	echo "--------------------------------------" >> $loglive
	echo " " >> $loglive
	}

getp(){ grep "^$1" "$2" | head -n1 | cut -d = -f 2; }

abort(){
	print " " | tee -a $log | tee -a $loglive
	print "!!! $1" | tee -a $log | tee -a $loglive
	print " " | tee -a $log | tee -a $loglive
	exit 1
	}
	
make_log(){
	#creating log
	if [ $(getp litegapps_type $MODPATH/module.prop) = litegapps_plus ]; then
	NAME_LOG=`echo "[LOG]litegapps++_$(getp version $MODPATH/module.prop).zip"`
	else
	NAME_LOG=`echo "[LOG]litegapps_$(getp version $MODPATH/module.prop).zip"`
	fi
	
	if [ $DEV_MODE = OFF ]; then
		printlog "- Make log"
	else
		printlog "- Make log to <$LITEGAPPS/$NAME_LOG>"
	fi
	for BLOG in $SYSTEM $PRODUCT $SYSTEM_EXT $VENDOR; do
		local BASENAME=`basename $BLOG`
		if [ -f $BLOG/build.prop ]; then
			cp -pf $BLOG/build.prop $LITEGAPPS/log/${BASENAME}_build.prop
		else
			echo "! /${BASENAME} is not detected <$BLOG/build.prop>" >> $LITEGAPPS/log/${BASENAME}_build.prop
		fi
	done
	
	if [ -d $LITEGAPPS/log ]; then
		listlog $tmp
		listlog $MODPATH
		listlog $LITEGAPPS
		cd $LITEGAPPS/log
		test -f $LITEGAPPS/$NAME_LOG && del $LITEGAPPS/$NAME_LOG
		$bin/zip -r9 $LITEGAPPS/$NAME_LOG * >/dev/null 2>&1
		cd /
		del $LITEGAPPS/log
	fi
}
report_bug(){
	printlog " "
	printlog "___________________________"
	printlog "| installation failed !!! |"
	printlog "|_________________________|"
	printlog " known error •> $1"
	printlog "___________________________"
	make_log
	printlog " Please report bug !"
	printlog " send log : /sdcard/Android/litegapps/$NAME_LOG"
	printlog " send in group telegram https://t.me/litegappsgroup"
	printlog "____________________________"
	printlog " "
	del $MODPATH
	[ $TYPEINSTALL = "kopi" ] && del $KOPIMOD
	exit 1
}

GET_PROP(){
	local LIST_PROP="
	$SYSTEM/build.prop
	$VENDOR/build.prop
	$PRODUCT/build.prop
	$SYSTEM_EXT/build.prop
	"
	local HJ VARPROP
	for HJ in $LIST_PROP; do
		if [ -f $HJ ] && grep -q "$1" "$HJ" 2>/dev/null; then
			VARPROP=`grep "^$1" "$HJ" | head -n1 | cut -d = -f 2`
			break
		fi
	done
	
	if [ "$VARPROP" ]; then
		echo "$VARPROP"
	elif [ "$(getprop $1)" ]; then
		getprop $1
	else
		return 1
	fi
	
	}
litegapps_info(){
	device_abpartition=$(getprop ro.build.ab_update)
	[ -n "$device_abpartition" ] || device_abpartition="A only"
	
MODULEVERSION=`getp version $MODPATH/module.prop`
MODULECODE=`getp versionCode $MODPATH/module.prop`
MODULENAME=`getp name $MODPATH/module.prop`
MODULEANDROID=`getp android $MODPATH/module.prop`
MODULEDATE=`getp date $MODPATH/module.prop`
MODULEAUTHOR=`getp author $MODPATH/module.prop`
device_abpartition=$(getprop ro.build.ab_update)
[ -n "$device_abpartition" ] || device_abpartition="A only"
[ -n "$system" ] || system="systemless"
[ -n "$TYPEINSTALL" ] || TYPEINSTALL="magisk module"
printlog "____________________________________"
printlog "|"
printlog "| Name            : $MODULENAME"
printlog "| Version         : $MODULEVERSION"
printlog "| Build date      : $MODULEDATE"
printlog "| By              : $MODULEAUTHOR"
case $TYPEINSTALL in
magisk | magisk_module)
printlog "| Mode            : systemless"
;;
*)
printlog "| Mode            : non systemless"
;;
esac
printlog "|___________________________________"
printlog "|"
printlog "| Telegram        : https://t.me/litegapps"
printlog "|___________________________________"
printlog "|              Device Info"
printlog "| Name Rom        : $(GET_PROP ro.build.display.id)"
if [ "$(GET_PROP ro.product.vendor.model)" ]; then
printlog "| Device          : $(GET_PROP ro.product.vendor.model)"
elif [ "$(GET_PROP ro.product.model)" ]; then
printlog "| Device          : $(GET_PROP ro.product.model)"
else
printlog "| Device          : null"
fi

if [ "$(GET_PROP ro.product.vendor.device)" ]; then
printlog "| Codename        : $(GET_PROP ro.product.vendor.device)"
elif [ "$(GET_PROP ro.product.device)" ]; then
printlog "| Codename        : $(GET_PROP ro.product.device)"
else
printlog "| Codename        : null"
fi
printlog "| Android Version : $(GET_PROP ro.build.version.release)"
printlog "| Architecture    : $ARCH"
printlog "| Api             : $(GET_PROP ro.build.version.sdk)"
printlog "| Density         : $(GET_PROP ro.sf.lcd_density)"
printlog "| Seamless        : $device_abpartition"
sedlog "| System          : $SYSTEM"
printlog "|___________________________________"
if [ $DEV_MODE = ON ]; then
	#skip if
	unset
else
	return 0
fi
printlog "|          Developer Mode"
printlog "| Boot Mode    : $BOOTMODE"
printlog "| System       : $SYSTEM"
if [ -d /dev/block/mapper ]; then
	dynamic3=true
else
	dynamic3=false
fi
printlog "| Dynamic Partition : $dynamic3"
if [ -d $SYSTEM ]; then
	touch $SYSTEM/litegapps.test
	if [ -f $SYSTEM/litegapps.test ]; then
		del $SYSTEM/litegapps.test
		printlog "| Read/Write system : true"
	else
		printlog "| Read/Write system : false"
	fi
else
printlog "| Read/Write system : false"
fi
printlog "| Litegapps Type : $(getp litegapps_type $MODPATH/module.prop)"
printlog "| Litegapps Compress : $(getp litegapps_apk_compress $MODPATH/module.prop)"
printlog "|___________________________________"
printlog "             Memory Info"
for W897 in /data /system /product /system_ext /vendor /dev; do
		if [ -d $W897 ]; then
		local FILESYSTEM=`df -h $W897 | tail -n 1 | tr -s ' ' | cut -d' ' -f1`
		printlog " Partition  = $W897"
		printlog " Filesystem = $FILESYSTEM"
		printlog " Mounted on = $(df -h $W897 | tail -n 1 | tr -s ' ' | cut -d' ' -f6)"
		printlog " Free       = $(df -h $W897 | tail -n 1 | tr -s ' ' | cut -d' ' -f4)"
		printlog " Usage      = $(df -h $W897 | tail -n 1 | tr -s ' ' | cut -d' ' -f3)"
		printlog " Total      = $(df -h $W897 | tail -n 1 | tr -s ' ' | cut -d' ' -f2)"
		printlog " Used %     = $(df -h $W897 | tail -n 1 | tr -s ' ' | cut -d' ' -f5)"
		printlog " Type       = $(mount | grep $FILESYSTEM | tail -n 1 | tr -s ' ' | cut -d' ' -f5)"
		printlog "____________________________________________"
		printlog " "
		fi
done
}

ch_con(){
chcon -h u:object_r:system_file:s0 "$1" || sedlog "Failed chcon $1"
}

ch_con_r(){
chcon -hR u:object_r:system_file:s0 "$1" || sedlog "Failed chcon $1"
}

terminal_tips(){
	print " "
	print "  Thanks for using litegapps 😁"
	print " "
	printlog "*Tips"
	print "- Open Terminal"
	print "- su"
	print "- litegapps"
	print " "
	print " "
	}

	
partition_check(){
	printlog "- Checking Partition"
	mount > $LITEGAPPS/log/mount.txt
	for R in $SYSTEM $PRODUCT $SYSTEM_EXT; do
		if [ -d $R ] && [ "$(ls -A $R)" ]; then
			touch $R/litegapps_4678
			if [ -f $R/litegapps_4678 ]; then
				sedlog "<$R> is mount RW"
				del $R/litegapps_4678
			else
				sedlog "<$R> is mount RO"
			fi
		fi
	done
	}
litegapps_plus(){
	test ! -d $tmp/$ARCH/$SDKTARGET && cdir $tmp/$ARCH/$SDKTARGET
	#sdk
	if [ -d $tmp/cross_sdk/$SDKTARGET ]; then
		cp -af $tmp/cross_sdk/$SDKTARGET/* $tmp/$ARCH/$SDKTARGET/
	else
		report_bug "Your Android Version Not Support <litegapps++>"
	fi

	#arch
	if [ -d $tmp/arch/$ARCH ]; then
		if [ $SDKTARGET -gt 28 ]; then
			cdir  $tmp/$ARCH/$SDKTARGET/system/product
			cp -af $tmp/arch/$ARCH/system/* $tmp/$ARCH/$SDKTARGET/system/product/
		else
			cp -af $tmp/arch/$ARCH/* $tmp/$ARCH/$SDKTARGET/
		fi
	fi
	#croos system
	if [ -d $tmp/cross_system ]; then
		if [ $SDKTARGET -gt 28 ]; then
			cdir $tmp/$ARCH/$SDKTARGET/system/product
			cp -af $tmp/cross_system/system/* $tmp/$ARCH/$SDKTARGET/system/product
		else
			cp -af $tmp/cross_system/* $tmp/$ARCH/$SDKTARGET/
		fi
	fi
	
	#api 23+
	if [ $SDKTARGET -ge 23 ] && [ $SDKTARGET -le 30 ] && [ -d $tmp/23 ]; then
		if [ $SDKTARGET -ge 29 ]; then
			cdir $tmp/$ARCH/$SDKTARGET/system/product/
			cp -af $tmp/23/$ARCH/system/* $tmp/$ARCH/$SDKTARGET/system/product/
		else
			cp -af $tmp/23/$ARCH/* $tmp/$ARCH/$SDKTARGET/
		fi
	#api 31+
	elif [ $SDKTARGET -ge 31 ] && [ $SDKTARGET -le 32 ] && [ -d $tmp/31 ]; then
		if [ $SDKTARGET -ge 29 ]; then
			cdir $tmp/$ARCH/$SDKTARGET/system/product/
			cp -af $tmp/31/$ARCH/system/* $tmp/$ARCH/$SDKTARGET/system/product/
		else
			cp -af $tmp/31/$ARCH/* $tmp/$ARCH/$SDKTARGET/
		fi
	fi
	}